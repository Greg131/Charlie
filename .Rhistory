length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep(" PN", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep("^PN", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Commentaires 1`
liste <- grep(" PN", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Commentaires 1`
liste <- grep("^PN", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
## ?? PNO ??
liste <- grep(" PN", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep("^PN", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Commentaires 1`
liste <- grep("^PN", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
## ?? PNO ??
liste <- grep(" PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep(" PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
## Champ Commencant par PN
liste <- grep("^PN", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep("^PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents$Type <- "Inconnu"
names(REX_Incidents)
## Analyse du champ `IO - Libellé de la ressource`
## Champ Commencant par PN suivit d'un espace ou d'un chiffre (eliminer VPN, PNO, ...)
liste <- grep("^PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep("^PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
## PN précédé d'un espace suivit d'un espace ou d'un chiffre
liste <- grep(" PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep(" PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
nrow(subset(REX_Incidents, Type = "PN"))
subset(REX_Incidents, Type = "PN"
nrow(subset(REX_Incidents, Type == "PN"))
REX_Incidents$Type <- "Inconnu"
names(REX_Incidents)
## Analyse du champ `IO - Libellé de la ressource`
## Champ Commencant par PN suivit d'un espace ou d'un chiffre (eliminer VPN, PNO, ...)
liste <- grep("^PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep("^PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
## PN précédé d'un espace suivit d'un espace ou d'un chiffre
liste <- grep(" PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep("^PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep("^PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
## PN précédé d'un espace suivit d'un espace ou d'un chiffre
liste <- grep(" PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep(" PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
nrow(subset(REX_Incidents, Type == "PN"))
nrow(subset(REX_Incidents, Type == "PN"))/nrow(REX_Incidents)
liste <- grep("^PN ", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep("^PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$`IO - Commentaires 1`
liste <- grep("^PN[0-9]", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$`IO - Commentaires 1`
REX_Incidents[liste,]$Type <- "PN"
## PN précédé d'un espace suivit d'un espace ou d'un chiffre
liste <- grep(" PN ", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$`IO - Commentaires 1`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep(" PN[0-9]", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$`IO - Commentaires 1`
REX_Incidents[liste,]$Type <- "PN"
nrow(subset(REX_Incidents, Type == "PN"))
nrow(subset(REX_Incidents, Type == "PN"))/nrow(REX_Incidents)
REX_Incidents$Num_PN <- -1
liste <- grep(" PN[0-9][0-9][0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$`IO - Commentaires 1`
liste <- grep("PN[0-9][0-9][0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
liste <- grep("^PN[0-9][0-9][0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
liste <- grep("^PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
grep("^PN[0-9]{3}",c("PN444","PN5555","pn5"), ignore.case = TRUE)
grep("^PN[0-9]{3}",c("PN444","pn5555","pn5"), ignore.case = TRUE)
regexpr("^PN[0-9]{3}",c("PN444","pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{3}",c("==PN444","-----pn5555","pn5"), ignore.case = TRUE)
grep("^PN[0-9]{3}",c("PN444","pn5555","pn5"), ignore.case = TRUE)
liste <- grep("^PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE,value = TRUE)
liste <- grep("^PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE,value = TRUE)
REX_Incidents[liste,]$`IO - Commentaires 1`
liste <- grep("^PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE,perl = TRUE)
liste <- grep("^PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$`IO - Commentaires 1`
grep("^PN[0-9]{3}",c("PN444","pn5555","pn5"), ignore.case = TRUE,value = TRUE)
grep("^PN[0-9]{3}",c("PN444","pn5555xxx","pn5"), ignore.case = TRUE,value = TRUE)
grep("^PN[0-9]{3}",c("PN444","pn5555xxx","pn5"), ignore.case = TRUE,value = TRUE,fixed = TRUE)
grep("^PN[0-9]{3}",c("PN444","pn5555xxx","pn5"), ignore.case = TRUE,value = TRUE,perl =  = TRUE)
gregexpr("PN[0-9]{3}",c("==PN444","-----pn5555","pn5"), ignore.case = TRUE)
regexec("PN[0-9]{3}",c("==PN444","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{3}",c("==PN444","-----pn5555","pn5"), ignore.case = TRUE)
grep("^PN[0-9]{3}",c("PN444","pn5555xxx","pn5"), ignore.case = TRUE,value = TRUE)
regexpr("^PN[0-9]{3}",c("PN444","pn5555xxx","pn5"), ignore.case = TRUE,value = TRUE)
regexpr("^PN[0-9]{3}",c("PN444","pn5555xxx","pn5"), ignore.case = TRUE)
grep("PN[0-9]{3}",c("456 PN444","pn5555xxx","pn5"), ignore.case = TRUE,value = TRUE)
regexpr("PN[0-9]{3}",c("456 PN444","pn5555xxx","pn5"), ignore.case = TRUE)
grep("PN[0-9]{3}",c("456 PN444","pn5555xxx","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{3}",c("456 PN444","pn5555xxx","pn5"), ignore.case = TRUE)
l <- regexpr("PN[0-9]{3}",c("456 PN444","pn5555xxx","pn5"), ignore.case = TRUE)
l
l[1,1]
l[1]
grep("PN[0-9]{3}",c("456  PN444","pn5555xxx","pn5"), ignore.case = TRUE,value = TRUE)
grep("PN[0-9]{3}",c("456  PN444","pn5555xxx","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{3}",c("456  PN444","pn5555xxx","pn5"), ignore.case = TRUE)
l <- regexpr("PN[0-9]{3}",c("456  PN444","pn5555xxx","pn5"), ignore.case = TRUE)
l
l[1]
vecteur <- c("456  PN444","pn5555xxx","pn5")
grep("PN[0-9]{3}",vecteur, ignore.case = TRUE,value = TRUE)
grep("PN[0-9]{3}",vecteur, ignore.case = TRUE)
l <- regexpr("PN[0-9]{3}",vecteur, ignore.case = TRUE)
index <- grep("PN[0-9]{3}",vecteur, ignore.case = TRUE)
substr(vecteur, pos[1], pos[1]+3)
pos[1]
pos <- regexpr("PN[0-9]{3}",vecteur, ignore.case = TRUE)
pos
pos[1]
substr(vecteur, pos[1], pos[1]+3)
substr(vecteur, pos[1]+3, pos[1]+6)
substr(vecteur, pos[1]+2, pos[1]+6)
substr(vecteur, pos[1]+2, pos[1]+5)
substr(vecteur, pos[1]+2, pos[1]+4)
substr(vecteur[1], pos[1]+2, pos[1]+4)
as.numeric(substr(vecteur[1], pos[1]+2, pos[1]+4))
index <- grep("PN[0-9]{3}",vecteur, ignore.case = TRUE)
substr(vecteur[index], pos[index]+2, pos[index]+4)
as.numeric(substr(vecteur[index], pos[index]+2, pos[index]+4))
index
vecteur <- c("456  PN444","pn5555xxx","pn5","test","PNO","PN289")
grep("PN[0-9]{3}",vecteur, ignore.case = TRUE,value = TRUE)
index <- grep("PN[0-9]{3}",vecteur, ignore.case = TRUE)
pos <- regexpr("PN[0-9]{3}",vecteur, ignore.case = TRUE)
pos
pos[1]
substr(vecteur[1], pos[1]+2, pos[1]+4)
as.numeric(substr(vecteur[1], pos[1]+2, pos[1]+4))
substr(vecteur[index], pos[index]+2, pos[index]+4)
as.numeric(substr(vecteur[index], pos[index]+2, pos[index]+4))
index
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
pos <- regexpr("PN[0-9]{3}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
pos <- regexpr("PN[0-9]{3}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+4))
REX_Incidents[index]$Num_PN <- val
REX_Incidents[index,]$Num_PN <- val
index
View(REX_Incidents)
index <- grep("PN[0-9]{1}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
pos <- regexpr("PN[0-9]{1}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+4))
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+2))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Num_PN <- val
index <- grep("PN[0-9]{2}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
pos <- regexpr("PN[0-9]{2}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+3))
REX_Incidents[index,]$Num_PN <- val
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
pos <- regexpr("PN[0-9]{3}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+4))
REX_Incidents[index,]$Num_PN <- val
index <- grep("PN[0-9]{1}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{1}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+2))
REX_Incidents[index,]$Num_PN <- val
index <- grep("PN[0-9]{2}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{2}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+3))
REX_Incidents[index,]$Num_PN <- val
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{3}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+4))
REX_Incidents[index,]$Num_PN <- val
nrow(subset(REX_Incidents, (NumPn != -1)))
nrow(subset(REX_Incidents, (Num_Pn != -1)))
nrow(subset(REX_Incidents, (Num_PN != -1)))
regexpr("PN[0-9]{3}[^0-9]",c("==PN444","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{3}[^54321]",c("==PN444","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{3}",c("==PN444","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{3}^5",c("==PN444","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{2}^X",c("==PN44xxx","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{2}[^X]",c("==PN44xxx","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{2}[^X]",c("==PN44xxx","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{2}[^X45]",c("==PN44xxx","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{2}[^45]",c("==PN44xxx","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{2}[^0123456789]",c("==PN44xxx","-----pn5555","pn5"), ignore.case = TRUE)
regexpr("PN[0-9]{2}[^0123456789]",c("==PN44xxx","-----pn5555ww","pn5","PN28 9","PN27"), ignore.case = TRUE)
regexpr("PN[0-9]{4}[^0123456789]",c("==PN44xxx","-----pn5555ww","pn5","PN28 9","PN27"), ignore.case = TRUE)
regexpr("PN[0-9]{4}[^0-9]",c("==PN44xxx","-----pn5555ww","pn5","PN28 9","PN27"), ignore.case = TRUE)
nrow(subset(REX_Incidents, (Num_PN != -1)))
REX_Incidents$Num_PN <- -1
index <- grep("PN[0-9]{1}[^0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{1}[^0-9]",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+2))
REX_Incidents[index,]$Num_PN <- val
index <- grep("PN[0-9]{2}[^0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{2}[^0-9]",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+3))
REX_Incidents[index,]$Num_PN <- val
index <- grep("PN[0-9]{3}[^0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{3}[^0-9]",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+4))
REX_Incidents[index,]$Num_PN <- val
nrow(subset(REX_Incidents, (Num_PN != -1)))
REX_Incidents$Num_PN <- -1
index <- grep("PN[0-9]{3}[^0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
index <- grep("PN[0-9]{3}[^0123456789]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
index <- grep("PN[0-9]{1}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{1}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+2))
REX_Incidents[index,]$Num_PN <- val
index <- grep("PN[0-9]{2}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{2}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+3))
REX_Incidents[index,]$Num_PN <- val
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{3}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+4))
REX_Incidents[index,]$Num_PN <- val
nrow(subset(REX_Incidents, (Num_PN != -1)))
res <- subset(REX_Incidents, (Num_PN != -1))
res$Num_PN
res$`IO - Libellé de la ressource`
head(res)
View(res)
View(REX_Incidents)
REX_Incidents$Num_PN <- -1
REX_Incidents$Cas <- "NA"
## On commence par le commentaire puis on écrasera avec celui trouvé dans le Lib
index <- grep("PN[0-9]{1}", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{1}",REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Commentaires 1`[index], pos[index]+2, pos[index]+2))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans commentaire taille >= 1 digit"
index <- grep("PN[0-9]{2}", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{2}",REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Commentaires 1`[index], pos[index]+2, pos[index]+3))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans commentaire taille >= 2 digit"
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{3}",REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Commentaires 1`[index], pos[index]+2, pos[index]+4))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans commentaire taille >= 3 digit"
index <- grep("PN[0-9]{1}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{1}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+2))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans lib taille >= 3 digit"
index <- grep("PN[0-9]{2}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{2}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+3))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans lib taille >= 3 digit"
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{3}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+4))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans lib taille >= 3 digit"
nrow(subset(REX_Incidents, (Num_PN != -1)))
res <- subset(REX_Incidents, (Num_PN != -1))
View(REX_Incidents)
nrow(subset(REX_Incidents, (Num_PN != -1)))
nrow(subset(REX_Incidents, (Num_PN != -1)&(Type="PN")))
nrow(subset(REX_Incidents, (Num_PN != -1) & (Type == "PN")))
subset(REX_Incidents, (Num_PN != -1) & (Type != "PN"))
df <- subset(REX_Incidents, (Num_PN != -1) & (Type != "PN"))
df$`IO - Libellé de la ressource`
View(df)
# ------------------------------------------------------------------------------
# Analyse du fichier REX_Incidents
# ------------------------------------------------------------------------------
str(REX_Incidents)
summary(REX_Incidents)
## Fichiers d'incidents :
## Maintenance
REX_Incidents <- read.csv("../data/REX_Incidents.csv", sep = ";",
check.names = FALSE, fileEncoding = "WINDOWS-1252")
REX_Incidents$Type <- "Inconnu"
names(REX_Incidents)
## Analyse du champ `IO - Libellé de la ressource`
## Champ Commencant par PN suivit d'un espace ou d'un chiffre (eliminer VPN, PNO, ...)
liste <- grep("^PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep("^PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
## PN précédé d'un espace suivit d'un espace ou d'un chiffre
liste <- grep(" PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep(" PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
nrow(subset(REX_Incidents, Type == "PN"))
nrow(subset(REX_Incidents, Type == "PN"))/nrow(REX_Incidents)
## PN précédé d'un espace suivit d'un espace ou d'un chiffre
liste <- grep("[^A-Z]PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep("[^A-Z]PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
nrow(subset(REX_Incidents, Type == "PN"))
nrow(subset(REX_Incidents, Type == "PN"))/nrow(REX_Incidents)
REX_Incidents$Type <- "Inconnu"
names(REX_Incidents)
## Analyse du champ `IO - Libellé de la ressource`
## Champ Commencant par PN suivit d'un espace ou d'un chiffre (eliminer VPN, PNO, ...)
liste <- grep("^PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep("^PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
## PN précédé d'un espace suivit d'un espace ou d'un chiffre
liste <- grep(" PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep(" PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
## PN précédé par autre chose qu'une lettre et suivit d'un espace ou d'un chiffre
liste <- grep("[^A-Z]PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep("[^A-Z]PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
nrow(subset(REX_Incidents, Type == "PN"))
nrow(subset(REX_Incidents, Type == "PN"))/nrow(REX_Incidents)
REX_Incidents$Type <- "Inconnu"
names(REX_Incidents)
## Analyse du champ `IO - Libellé de la ressource`
## Champ Commencant par PN suivit d'un espace ou d'un chiffre (eliminer VPN, PNO, ...)
liste <- grep("^PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep("^PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
## PN précédé par autre chose qu'une lettre et suivit d'un espace ou d'un chiffre
liste <- grep("[^A-Z]PN ", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep("[^A-Z]PN[0-9]", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$Type <- "PN"
nrow(subset(REX_Incidents, Type == "PN"))
nrow(subset(REX_Incidents, Type == "PN"))/nrow(REX_Incidents)
liste <- grep("^PN", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
## Aucun
## PN précédé d'un espace suivit d'un espace ou d'un chiffre
liste <- grep("[^A-Z]PN ", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$`IO - Commentaires 1`
REX_Incidents[liste,]$Type <- "PN"
liste <- grep("[^A-Z]PN[0-9]", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(liste)
REX_Incidents[liste,]$`IO - Libellé de la ressource`
REX_Incidents[liste,]$`IO - Commentaires 1`
REX_Incidents[liste,]$Type <- "PN"
nrow(subset(REX_Incidents, Type == "PN"))
nrow(subset(REX_Incidents, Type == "PN"))/nrow(REX_Incidents)
## Extraction d'un numéro de PN .....
REX_Incidents$Num_PN <- -1
REX_Incidents$Cas <- "NA"
## On commence par une recherche dans `IO - Commentaires 1` puis on écrasera
## éventuellement un numéro de PN trouvé dans `IO - Libellé de la ressource`
## `IO - Commentaires 1`
index <- grep("PN[0-9]{1}", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{1}",REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Commentaires 1`[index], pos[index]+2, pos[index]+2))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans commentaire taille >= 1 digit"
index <- grep("PN[0-9]{2}", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{2}",REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Commentaires 1`[index], pos[index]+2, pos[index]+3))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans commentaire taille >= 2 digit"
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{3}",REX_Incidents$`IO - Commentaires 1`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Commentaires 1`[index], pos[index]+2, pos[index]+4))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans commentaire taille >= 3 digit"
## `IO - Libellé de la ressource`
index <- grep("PN[0-9]{1}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{1}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+2))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans lib taille >= 3 digit"
index <- grep("PN[0-9]{2}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{2}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+3))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans lib taille >= 3 digit"
index <- grep("PN[0-9]{3}", REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
length(index)
pos <- regexpr("PN[0-9]{3}",REX_Incidents$`IO - Libellé de la ressource`, ignore.case = TRUE)
val <- as.numeric(substr(REX_Incidents$`IO - Libellé de la ressource`[index], pos[index]+2, pos[index]+4))
REX_Incidents[index,]$Num_PN <- val
REX_Incidents[index,]$Cas <- "Premier PN cité dans lib taille >= 3 digit"
## Nombre de numéro de PN trouvés
nrow(subset(REX_Incidents, (Num_PN != -1)))
nrow(subset(REX_Incidents, (Num_PN != -1) & (Type == "PN")))
df <- subset(REX_Incidents, (Num_PN != -1) & (Type != "PN"))
View(df)
