PN_pr <- PN_proche(REX_Incidents[1,]$LIGNE,REX_Incidents[1,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[1,]$LIGNE,REX_Incidents[1,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", 1))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("AVP le plus proche sur la voie:", Cdv_pr$distance))
AVP_pr <- AVP_proche(REX_Incidents[1,]$LIGNE,REX_Incidents[1,]$PK)
View(AVP_pr)
for (i in 1:10) {
lamb <- lambert(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
PN_pr <- PN_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", i))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("Cdv le plus proche sur la voie:", Cdv_pr$distance))
# calcul de la distance entre le plus proche et ...
}
# ----------------------------------------------------------
PN_pr <- PN_proche(REX_Incidents[1,]$LIGNE,REX_Incidents[1,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[1,]$LIGNE,REX_Incidents[1,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", 1))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
View(PN_pr)
REX_Incidents[1,]$LIGNE
PN <- subset(Liste_PN, (LIGNE == 752000))
PN <- subset(Liste_PN, (LIGNE == 1000))
PN <- subset(Liste_PN, (LIGNE == 752000))
PN <- subset(Liste_PN, (LIGNE == 1000))
PN_proche(1000,32000)
for (i in 1:10) {
lamb <- lambert(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
PN_pr <- PN_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", i))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("Cdv le plus proche sur la voie:", Cdv_pr$distance))
# calcul de la distance entre le plus proche et ...
}
for (i in 1:10) {
lamb <- lambert(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
PN_pr <- PN_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", i))
print(paste("Ligne: ", REX_Incidents[i,]$LIGNE))
print(paste("Ligne: ", REX_Incidents[i,]$PK))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("Cdv le plus proche sur la voie:", Cdv_pr$distance))
# calcul de la distance entre le plus proche et ...
}
PN_pr <- PN_proche(550000,34718)
View(PN_pr)
lamb <- lambert(550000,34718)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
View(Liste_PN)
View(PN_voisins)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,500)
View(PN_voisins)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,600)
View(PN_voisins)
for (i in 1:10) {
lamb <- lambert(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
PN_pr <- PN_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", i))
print(paste("Ligne: ", REX_Incidents[i,]$LIGNE))
print(paste("Ligne: ", REX_Incidents[i,]$PK))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("Cdv le plus proche sur la voie:", Cdv_pr$distance))
# calcul de la distance entre le plus proche et ...
}
for (i in c(1,10) {
lamb <- lambert(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
PN_pr <- PN_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", i))
print(paste("Ligne: ", REX_Incidents[i,]$LIGNE))
print(paste("Ligne: ", REX_Incidents[i,]$PK))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("Cdv le plus proche sur la voie:", Cdv_pr$distance))
# calcul de la distance entre le plus proche et ...
}
for (i in c(1,10)) {
lamb <- lambert(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
PN_pr <- PN_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", i))
print(paste("Ligne: ", REX_Incidents[i,]$LIGNE))
print(paste("Ligne: ", REX_Incidents[i,]$PK))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("Cdv le plus proche sur la voie:", Cdv_pr$distance))
# calcul de la distance entre le plus proche et ...
}
lamb <- lambert(550000,34718)
for (i in 14:22) {
lamb <- lambert(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
PN_pr <- PN_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", i))
print(paste("Ligne: ", REX_Incidents[i,]$LIGNE))
print(paste("Ligne: ", REX_Incidents[i,]$PK))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("Cdv le plus proche sur la voie:", Cdv_pr$distance))
# calcul de la distance entre le plus proche et ...
}
for (i in c(14,22)) {
lamb <- lambert(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
PN_pr <- PN_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", i))
print(paste("Ligne: ", REX_Incidents[i,]$LIGNE))
print(paste("Ligne: ", REX_Incidents[i,]$PK))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("Cdv le plus proche sur la voie:", Cdv_pr$distance))
# calcul de la distance entre le plus proche et ...
}
lamb <- lambert(550000,34718)
for (i in c(14,22,75)) {
lamb <- lambert(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,200)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
PN_pr <- PN_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
Cdv_pr <- Cdv_proche(REX_Incidents[i,]$LIGNE,REX_Incidents[i,]$PK)
nrow(AVP_voisins)
nrow(PN_voisins)
nrow(Cdv_voisins)
print(paste("Incident : ", i))
print(paste("Ligne: ", REX_Incidents[i,]$LIGNE))
print(paste("Ligne: ", REX_Incidents[i,]$PK))
print(paste("Nombre d'apareils de voie voisins: ", nrow(AVP_voisins)))
print(paste ("Nombre de passages à niveau voisins: ", nrow(PN_voisins)))
print(paste ("Nombre de circuit de voie voisins: ", nrow(Cdv_voisins)))
print(paste ("AVP le plus proche sur la voie:", AVP_pr$distance))
print(paste ("PN le plus proche sur la voie:", PN_pr$distance))
print(paste ("Cdv le plus proche sur la voie:", Cdv_pr$distance))
# calcul de la distance entre le plus proche et ...
}
lamb <- lambert(420000,13880)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,200)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,600)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,200)
AVP_pr <- AVP_proche(420000,13880)
PN_pr <- PN_proche(420000,13880)
Cdv_pr <- Cdv_proche(420000,13880)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,1000)
lamb <- lambert(420000,13880)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,1000)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,1000)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,1000)
AVP_pr <- AVP_proche(420000,13880)
PN_pr <- PN_proche(420000,13880)
Cdv_pr <- Cdv_proche(420000,13880)
View(PN_pr)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,4000)
View(PN_voisins)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,6000)
View(PN_voisins)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,10000)
View(PN_voisins)
lamb <- lambert(420000,13880)
AVP_voisins <- Liste_AVP_voisins(lamb$X,lamb$Y,1000)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,10000)
Cdv_voisins <- Liste_Zones_Cdv_voisins(lamb$X,lamb$Y,1000)
AVP_pr <- AVP_proche(420000,13880)
PN_pr <- PN_proche(420000,13880)
Cdv_pr <- Cdv_proche(420000,13880)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,10000)
View(PN_pr)
View(PN_voisins)
View(PN_pr)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,1000)
View(PN_voisins)
PN_voisins <- Liste_PN_voisins(lamb$X,lamb$Y,6000)
View(PN_voisins)
View(PN_pr)
View(Liste_PN)
Liste_PNxxx_voisins <- function(X, Y, rayon = 500) {
Liste_PNxxx_voisins <- Liste_PN
# Calcul et ajout de la distance euclidienne
Liste_PNxxx_voisins$distance <- sqrt((Liste_PNxxx_voisins$X-X)^2+(Liste_PNxxx_voisins$Y-Y)^2)
Liste_PNxxx_voisins <- subset(Liste_PNxxx_voisins, distance < rayon)
Liste_PNxxx_voisins
}
Liste_PNxxx_voisins <- function(X, Y, Num_PN, rayon = 500) {
Liste_PNxxx_voisins <- subset(Liste_PN, (Liste_PN$Num_PN == Num_PN))
# Calcul et ajout de la distance euclidienne
Liste_PNxxx_voisins$distance <- sqrt((Liste_PNxxx_voisins$X-X)^2+(Liste_PNxxx_voisins$Y-Y)^2)
Liste_PNxxx_voisins <- subset(Liste_PNxxx_voisins, distance < rayon)
Liste_PNxxx_voisins
}
Liste_PNxxx_voisins(586796.1,6816543,12,2000)
Liste_PNxxx_voisins <- function(X, Y, Num_PN, rayon = 500) {
Liste_PNxxx_voisins <- subset(Liste_PN, (Liste_PN$Num_PN == Num_PN))
# Calcul et ajout de la distance euclidienne
Liste_PNxxx_voisins$distance <- sqrt((Liste_PNxxx_voisins$X-X)^2+(Liste_PNxxx_voisins$Y-Y)^2)
Liste_PNxxx_voisins <- subset(Liste_PNxxx_voisins, distance < rayon)
Liste_PNxxx_voisins
}
Liste_PNxxx_voisins(586796.1,6816543,12,2000)
Liste_PNxxx_voisins <- subset(Liste_PN, (Liste_PN$Num_PN == 12))
View(Liste_PNxxx_voisins)
str(Liste_PN)
Liste_PNxxx_voisins <- subset(Liste_PN, (Num_PN == 12))
View(Liste_PNxxx_voisins)
Liste_PNxxx_voisins <- function(X, Y, Nun, rayon = 500) {
Liste_PNxxx_voisins <- subset(Liste_PN, (Num_PN == Num))
# Calcul et ajout de la distance euclidienne
Liste_PNxxx_voisins$distance <- sqrt((Liste_PNxxx_voisins$X-X)^2+(Liste_PNxxx_voisins$Y-Y)^2)
Liste_PNxxx_voisins <- subset(Liste_PNxxx_voisins, distance < rayon)
Liste_PNxxx_voisins
}
Liste_PNxxx_voisins(586796.1,6816543,12,2000)
Liste_PNxxx_voisins <- function(X, Y, Num, rayon = 500) {
Liste_PNxxx_voisins <- subset(Liste_PN, (Num_PN == Num))
# Calcul et ajout de la distance euclidienne
Liste_PNxxx_voisins$distance <- sqrt((Liste_PNxxx_voisins$X-X)^2+(Liste_PNxxx_voisins$Y-Y)^2)
Liste_PNxxx_voisins <- subset(Liste_PNxxx_voisins, distance < rayon)
Liste_PNxxx_voisins
}
Liste_PNxxx_voisins(586796.1,6816543,12,2000)
Liste_PNxxx_voisins(586796.1,6816543,12,200000)
Liste_PNxxx_voisins(586796.1,6816543,12,20000)
REX_Incidents_PN <- read.csv("../data/REX_Incidents_PN.csv", sep = ";",check.names = FALSE)
str(REX_Incidents_PN)
head(REX_Incidents_PN$type_equipement_final)
head(REX_Incidents_PN$type_equipement_final)
head(REX_Incidents_PN)
PNxxx_proche <- function(ligne, pk, num) {
PNxxx <- subset(Liste_PN, (LIGNE == ligne) & (Num_PN == num))
PNxxx$distance <- abs(PN$PK - pk)
PNxxx <- PNxxx[which.min(PN$distance), ]
PNxxx
}
PN_proche(1000,32000)
PNxxx_proche(1000,32000,12)
PNxxx_proche <- function(ligne, pk, num) {
PNxxx <- subset(Liste_PN, (LIGNE == ligne) & (Num_PN == num))
PNxxx$distance <- abs(PN$PK - pk)
PNxxx <- PNxxx[which.min(PN$distance), ]
PNxxx
}
PNxxx_proche(1000,32000,12)
PN_proche(1000,32000)
PN <- subset(Liste_PN, (LIGNE == 752000))
PN <- subset(Liste_PN, (LIGNE == 1000))
PNxxx <- subset(Liste_PN, (LIGNE == 1000) & (Num_PN == 12))
View(PNxxx)
PNxxx_proche <- function(ligne, pk, num) {
PNxxx <- subset(Liste_PN, (LIGNE == ligne) & (Num_PN == num))
PNxxx$distance <- abs(PN$PK - pk)
PNxxx <- PNxxx[which.min(PN$distance), ]
PNxxx
}
PNxxx_proche(1000,32000,12)
PN_proche(1000,32000)
PNxxx_proche <- function(ligne, pk, num) {
PNxxx <- subset(Liste_PN, (LIGNE == ligne) & (Num_PN == num))
PNxxx$distance <- abs(PNxxx$PK - pk)
PNxxx <- PNxxx[which.min(PNxxx$distance), ]
PNxxx
}
PNxxx_proche(1000,32000,12)
Liste_PNxxx_voisins(586796.1,6816543,12,20000)
type <- REX_Incidents_PN$type_equipement_final[1,]
str(REX_Incidents_PN)
type <- REX_Incidents_PN$type_equipement_final[1,]
type <- REX_Incidents_PN$type_equipement_final[1,]
type <- REX_Incidents_PN$type_equipement_final[1]
ligne <- REX_Incidents_PN$LIGNE[1]
pk <- REX_Incidents_PN$PK[1]
View(Liste_PN)
View(Liste_PN)
str(Liste_PN)
REX_Incidents_PN <- read.csv("../data/REX_Incidents_PN2.csv", sep = ";",check.names = FALSE)
str(REX_Incidents_PN)
head(REX_Incidents_PN)
str(REX_Incidents_PN)
head(REX_Incidents_PN)
REX_Incidents_PN$Id_Armen <- 0
REX_Incidents_PN$Confiance <- 0
View(REX_Incidents)
View(REX_Incidents_PN)
type <- REX_Incidents_PN$type_equipement_final[1]
type
type <- REX_Incidents_PN$type_equipement_final[1,]
type <- REX_Incidents_PN$type_equipement_final[1]
type
View(REX_Incidents_PN)
View(REX_Incidents)
View(REX_Incidents_PN)
type <- REX_Incidents_PN$type_equipement_final[4]
type
type <- REX_Incidents_PN$type_equipement_final[4]
type
ligne <- REX_Incidents_PN$LIGNE[4]
pk <- REX_Incidents_PN$PK[4]
num <- REX_Incidents_PN$Num_PN[4]
View(REX_Incidents_PN)
num <- REX_Incidents_PN$num_pn[4]
num
PN_Candidat <- PNxxx_proche(550000,34718,26)
View(PN_Candidat)
i <- 4
if (type == "PN enrichi") {
# PN et numéro identifié
PN_Candidat <- PNxxx_proche(ligne,pk,num)
distance <- PN_Candidat$distance
# verifier que le plus proche du même nom est à moins de 200 m
print(paste("Distance : ", distance))
if (distance < 200) {
print("moins de 200 m : confirmation candidat 90% ")
REX_Incidents_PN$Id_Armen[i] <- PN_Candidat$Id_Armen
REX_Incidents_PN$Confiance[i] <- 0.9
} else if (distance < 1000) {
print("entre 200 m et 1 km: confirmation candidat 50% ")
REX_Incidents_PN$Id_Armen[i] <- PN_Candidat$Id_Armen
REX_Incidents_PN$Confiance[i] <- 0.5
} else {
print("plus de 1km : confirmation candidat < 10% ")
}
else {
print('autre cas')
}
if (type == "PN enrichi") {
# PN et numéro identifié
PN_Candidat <- PNxxx_proche(ligne,pk,num)
distance <- PN_Candidat$distance
# verifier que le plus proche du même nom est à moins de 200 m
print(paste("Distance : ", distance))
if (distance < 200) {
print("moins de 200 m : confirmation candidat 90% ")
REX_Incidents_PN$Id_Armen[i] <- PN_Candidat$Id_Armen
REX_Incidents_PN$Confiance[i] <- 0.9
} else if (distance < 1000) {
print("entre 200 m et 1 km: confirmation candidat 50% ")
REX_Incidents_PN$Id_Armen[i] <- PN_Candidat$Id_Armen
REX_Incidents_PN$Confiance[i] <- 0.5
} else {
print("plus de 1km : confirmation candidat < 10% ")
}
}
else {
print('autre cas')
}
if (type == "PN enrichi") {
# PN et numéro identifié
PN_Candidat <- PNxxx_proche(ligne,pk,num)
distance <- PN_Candidat$distance
# verifier que le plus proche du même nom est à moins de 200 m
print(paste("Distance : ", distance))
if (distance < 200) {
print("moins de 200 m : confirmation candidat 90% ")
REX_Incidents_PN$Id_Armen[i] <- PN_Candidat$Id_Armen
REX_Incidents_PN$Confiance[i] <- 0.9
} else if (distance < 1000) {
print("entre 200 m et 1 km: confirmation candidat 50% ")
REX_Incidents_PN$Id_Armen[i] <- PN_Candidat$Id_Armen
REX_Incidents_PN$Confiance[i] <- 0.5
} else {
print("plus de 1km : confirmation candidat < 10% ")
}
else {
print('autre cas')
}
# ----------------------------------------------------------
if (type == "PN enrichi") {
# PN et numéro identifié
PN_Candidat <- PNxxx_proche(ligne,pk,num)
distance <- PN_Candidat$distance
# verifier que le plus proche du même nom est à moins de 200 m
print(paste("Distance : ", distance))
if (distance < 200) {
print("moins de 200 m : confirmation candidat 90% ")
REX_Incidents_PN$Id_Armen[i] <- PN_Candidat$Id_Armen
REX_Incidents_PN$Confiance[i] <- 0.9
} else if (distance < 1000) {
print("entre 200 m et 1 km: confirmation candidat 50% ")
REX_Incidents_PN$Id_Armen[i] <- PN_Candidat$Id_Armen
REX_Incidents_PN$Confiance[i] <- 0.5
} else {
print("plus de 1km : confirmation candidat < 10% ")
}
}
else {
print('autre cas')
}
str(REX_Incidents_PN)
REX_Incidents_PN <- read.csv("../data/REX_Incidents_PN2.csv", sep = ";",check.names = FALSE,
colClasses = c("integer","integer","character","character","integer","numeric","numeric"))
str(Liste_PN)
REX_Incidents_PN <- read.csv("../data/REX_Incidents_PN2.csv", sep = ";",check.names = FALSE)
str(REX_Incidents_PN)
#REX_Incidents_PN <- read.csv("../data/REX_Incidents_PN2.csv", sep = ";",check.names = FALSE,
#                             colClasses = c("integer","integer","character","character","integer","numeric","numeric"))
str(REX_Incidents_PN)
head(REX_Incidents_PN)
REX_Incidents_PN$Id_Armen <- 0
REX_Incidents_PN$Confiance <- 0
type <- REX_Incidents_PN$type_equipement_final[4]
type
ligne <- REX_Incidents_PN$LIGNE[4]
pk <- REX_Incidents_PN$PK[4]
num <- REX_Incidents_PN$num_pn[4]
num
class(num)
num
num <- as.integer(num)
num
